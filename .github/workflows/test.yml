name: Tests

on:
  pull_request:
    branches: [master]
  push:
    branches: [master]
  workflow_dispatch:

concurrency:
  group: ${ github.ref }
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}-test:latest

jobs:
  build:
    runs-on: "ubuntu-latest"

    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push to GitHub registry
        uses: docker/build-push-action@v3
        with:
          context: .
          build-args: app_version=${{ github.sha }}
          file: Dockerfile-test
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Pull and run tests
        env:
          api_key: ${{ secrets.API_KEY }}
          telegram_token: ${{ secrets.TELEGRAM_TOKEN }}
          base_url: ${{ secrets.BASE_URL }}
          alert_chat_id: ${{ secrets.ALERT_CHATID }}
          webhook_url: ${{ secrets.WEBHOOK_URL }}
          mongo_user: ${{ secrets.MONGO_INITDB_ROOT_USERNAME }}
          mongo_password: $ {{ secrets.MONGO_INITDB_ROOT_PASSWORD }}
        run: |
          echo "ALERT_CHAT_ID=$alert_chat_id" >> .env
          echo "API_KEY=$api_key" >> .env
          echo "BASE_URL=$base_url" >> .env
          echo "MONGO_INITDB_ROOT_PASSWORD=$mongo_password" >> .env
          echo "MONGO_INITDB_ROOT_USERNAME=$mongo_user" >> .env
          echo "TELEGRAM_TOKEN=$telegram_token" >> .env
          echo "WEBHOOK_URL=$webhook_url" >> .env
          
          docker compose up -d mongo
          docker compose exec -e TEST=1 mongo mongosh --file /scripts/mongo-startup.js
          docker compose run test
